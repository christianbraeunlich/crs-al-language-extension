name: CI

on:
  push:
    branches:
      - '**'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: npm

      - name: Read package information
        run: |
          $version = (Get-Content ./package.json) | ConvertFrom-Json | Select -ExpandProperty "version"
          $name = (Get-Content ./package.json) | ConvertFrom-Json | Select -ExpandProperty "name"
          "PACKAGE_VERSION=$version" >> $env:GITHUB_ENV
          "PACKAGE_NAME=$name-$version" >> $env:GITHUB_ENV

      - name: Install
        run: npm install
      
      - name: Lint
        run: npm run lint

      - name: Test
        run: npm test

      - name: Install VSCE
        run: npm install -g vsce

      - name: build
        run: vsce package

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PACKAGE_NAME }}.vsix
          path: ./${{ env.PACKAGE_NAME }}.vsix
          retention-days: 5

    outputs:
      PACKAGE_NAME: ${{ env.PACKAGE_NAME }}
      PACKAGE_VERSION: ${{ env.PACKAGE_VERSION }}

  release:
    name: Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: npm

      - uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build.outputs.PACKAGE_NAME }}.vsix

      - name: Check package version
        uses: geritol/match-tag-to-package-version@0.2.0
        with:
          TAG_PREFIX: v

      - name: Install VSCE
        run: npm install -g vsce

      - name: Publish
        run: vsce publish --packagePath ./${{ needs.build.outputs.PACKAGE_NAME }}.vsix -p ${{ secrets.VSCE_TOKEN }}

      - name: Generate Changelog
        id: changelog
        uses: mindsers/changelog-reader-action@v2
        with:
            version: ${{ needs.build.outputs.PACKAGE_VERSION }}
            path: ./CHANGELOG.md

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            tag_name: ${{ github.ref }}
            release_name: v${{ needs.build.outputs.PACKAGE_VERSION }}
            body: ${{ steps.changelog.outputs.changes }}
            draft: false
            prerelease: false

      - name: Upload GitHub release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./${{ needs.build.outputs.PACKAGE_NAME }}.vsix
            asset_name: ${{ needs.build.outputs.PACKAGE_NAME }}.vsix
            asset_content_type: application/zip

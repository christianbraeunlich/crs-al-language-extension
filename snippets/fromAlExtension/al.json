{
    "Snippet: Trigger": {
        "prefix": "ttriggerwaldo",
        "body": [
            "trigger ${1:OnWhat}()",
            "begin",
            "\t$0",
            "end;"
        ],
        "description": "Snippet: Trigger"
    },
    "Snippet: Procedure": {
        "prefix": "tprocedurewaldo",
        "body": [
            "${1:local} procedure ${2:MyProcedure}(${3})",
            "begin",
            "\t$0",
            "end;"
        ],
        "description": "Snippet: Procedure"
    },
    "Snippet: Assert Error": {
        "prefix": "tassertwaldo",
        "body": [
            "assertError ${1:AssertStatement};",
            "if ${2:getLastErrorText} <> ${3:ErrorText} then",
            "\terror('${4:Unexpected error: %1}', ${0:getLastErrorText});"
        ],
        "description": "Snippet: Assert Error"
    },
    "Snippet: With Do": {
        "prefix": "twithdowaldo",
        "body": [
            "with ${1:RecordName} do begin",
            "\t$0",
            "end;"
        ],
        "description": "Snippet: With Do"
    },
    "Snippet: If": {
        "prefix": "tifwaldo",
        "body": [
            "if ${1:BooleanExpression} then begin",
            "\t$0",
            "end;"
        ],
        "description": "Snippet: If"
    },
    "Snippet: If Else": {
        "prefix": "tifelsewaldo",
        "body": [
            "if ${1:BooleanExpression} then begin",
            "\t${2}",
            "end else begin",
            "\t$0",
            "end;"
        ],
        "description": "Snippet: If Else"
    },
    "Snippet: Case Of": {
        "prefix": "tcaseofwaldo",
        "body": [
            "case ${1:Expression} of",
            "\t${2:ExpressionOrRange}:",
            "\t\t${3}",
            "\t${4:ExpressionOrRange}:",
            "\t\t$0",
            "end;"
        ],
        "description": "Snippet: Case Of"
    },
    "Snippet: Case Else": {
        "prefix": "tcaseelsewaldo",
        "body": [
            "case ${1:Expression} of",
            "\t${2:ExpressionOrRange}:",
            "\t\t${3}",
            "\t${4:ExpressionOrRange}:",
            "\t\t${5}",
            "else",
            "\t$0",
            "end;"
        ],
        "description": "Snippet: Case Else"
    },
    "Snippet: For": {
        "prefix": "tforwaldo",
        "body": [
            "for ${1:ControlVariable} := ${2:StartNumber} to ${3:EndNumber} do begin",
            "\t$0",
            "end;"
        ],
        "description": "Snippet: For"
    },
    "Snippet: ForEach": {
        "prefix": "tforeachwaldo",
        "body": [
            "foreach ${1:Value} in ${2:EnumerableCollection} do begin",
            "\t$0",
            "end;"
        ],
        "description": "Snippet: ForEach"
    },
    "Snippet: While": {
        "prefix": "twhilewaldo",
        "body": [
            "while ${1:BooleanExpression} do begin",
            "\t$0",
            "end;"
        ],
        "description": "Snippet: While"
    },
    "Snippet: Repeat Until": {
        "prefix": "trepeatwaldo",
        "body": [
            "repeat",
            "\t$0",
            "until ${1:BooleanExpression};"
        ],
        "description": "Snippet: Repeat Until"
    },
    "Snippet: Event Subscriber": {
        "prefix": "teventsubwaldo",
        "body": [
            "[EventSubscriber(ObjectType::${1|Codeunit,Page,Query,Report,Table,XmlPort|}, ${2|Codeunit::,Database::,Page::,Query::,Report::,XmlPort::|}${3}, ${4:''}, ${5:''}, ${6|false,true|}, ${7|false,true|})]",
            "local procedure ${8:MyProcedure}(${9})",
            "begin",
            "\t$0",
            "end;"
        ],
        "description": "Snippet: Event Subscriber"
    },
    "Snippet: Integration Event": {
        "prefix": "teventintwaldo",
        "body": [
            "[IntegrationEvent(${1:IncludeSender},${2:GlobalVarAccess})]",
            "local procedure ${0:MyProcedure}()",
            "begin",
            "end;"
        ],
        "description": "Snippet: Integration Event"
    },
    "Snippet: Business Event": {
        "prefix": "teventbuswaldo",
        "body": [
            "[BusinessEvent(${1:IncludeSender})]",
            "local procedure ${0:MyProcedure}()",
            "begin",
            "end;"
        ],
        "description": "Snippet: Business Event"
    },
    "Snippet: Internal Event": {
        "prefix": "teventinternalwaldo",
        "body": [
            "[InternalEvent(${1:IncludeSender})]",
            "local procedure ${0:MyProcedure}()",
            "begin",
            "end;"
        ],
        "description": "Snippet: Internal Event"
    },
    "Snippet: Caption ML": {
        "prefix": "tcaptionmlwaldo",
        "body": [
            "CaptionML = ENU = '${1:englishText}',",
            "\t\t\t${2:languageShortcut} = '${0:languageText}';"
        ],
        "description": "Snippet: Caption ML"
    },
    "Snippet: Option Caption ML": {
        "prefix": "toptioncaptionmlwaldo",
        "body": [
            "OptionCaptionML = ENU = '${1:englishText}',",
            "\t\t\t${2:languageShortcut} = '${0:languageText}';"
        ],
        "description": "Snippet: Option Caption ML"
    },
    "Snippet: If Table Empty Else": {
        "prefix": "tisemptyelsewaldo",
        "body": [
            "if ${1:Rec}.IsEmpty then begin",
            "\t${2}",
            "end else begin",
            "\t$0",
            "end;"
        ],
        "description": "Snippet: If Table Empty Else"
    },
    "Snippet: If Table Empty": {
        "prefix": "tisemptywaldo",
        "body": [
            "if ${1:Rec}.IsEmpty then begin",
            "\t$0",
            "end;"
        ],
        "description": "Snippet: If Table Empty"
    }
}
